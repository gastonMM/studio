// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Material {
  id                            String   @id @default(cuid())
  nombreMaterial                String   @unique
  costoPorKg                    Float
  pesoSpoolCompradoGramos       Int      @default(1000)
  urlProducto                   String?
  selectorPrecioCSS             String?
  densidad                      Float?
  diametro                      Float?
  notasAdicionales              String?
  fechaUltimaActualizacionCosto DateTime @default(now()) @updatedAt
  projects                      Project[]
}

model Accessory {
  id                   String                 @id @default(cuid())
  nombreAccesorio      String                 @unique
  precioPaqueteObtenido Float
  unidadesPorPaqueteEnLink Int                  @default(1)
  costoPorUnidad       Float
  urlProducto          String?
  notasAdicionales     String?
  fechaUltimaActualizacionCosto DateTime @default(now()) @updatedAt
  projects             AccessoryInProject[]
}

model ElectricityProfile {
  id                 String           @id @default(cuid())
  nombrePerfil       String           @unique
  consumoMensualKWh  Float
  costoTotalFactura  Float
  costoPorKWh        Float
  printerProfiles    PrinterProfile[]
}

model PrinterProfile {
  id                                String    @id @default(cuid())
  nombrePerfilImpresora             String    @unique
  modeloImpresora                   String?
  consumoEnergeticoImpresoraWatts   Int?
  costoAdquisicionImpresora         Float?
  vidaUtilEstimadaHorasImpresora    Int?
  porcentajeFallasEstimado          Float?
  costoHoraLaborOperativa           Float?
  costoHoraLaborPostProcesado       Float?
  fechaUltimaActualizacionConfig    DateTime  @default(now()) @updatedAt
  
  electricityProfileId              String
  electricityProfile                ElectricityProfile @relation(fields: [electricityProfileId], references: [id])
  projects                          Project[]
}

model SalesProfile {
  id                      String    @id @default(cuid())
  nombrePerfil            String    @unique
  margenGananciaDirecta   Float     @default(30)
  comisionMercadoLibre    Float     @default(15)
  costoFijoMercadoLibre   Float     @default(800)
  projects                Project[]
}

model Tag {
  id       String    @id @default(cuid())
  name     String    @unique
  color    String?
  projects Project[] @relation("ProjectTags")
}

model Project {
  id                   String    @id @default(cuid())
  nombreProyecto       String
  descripcionProyecto  String?
  imageUrls            Json[]
  fechaCreacion        DateTime  @default(now())
  fechaUltimoCalculo   DateTime  @default(now()) @updatedAt

  materialUsadoId             String
  material                    Material @relation(fields: [materialUsadoId], references: [id])

  configuracionImpresoraIdUsada String
  printerProfile              PrinterProfile @relation(fields: [configuracionImpresoraIdUsada], references: [id])
  
  perfilVentaIdUsado           String
  salesProfile                 SalesProfile @relation(fields: [perfilVentaIdUsado], references: [id])
  
  inputsOriginales             Json
  resultadosCalculados         Json?

  tags                         Tag[] @relation("ProjectTags")
  accesoriosUsadosEnProyecto   AccessoryInProject[]
}

model AccessoryInProject {
  id                                String    @id @default(cuid())
  cantidadUsadaPorPieza             Int
  costoUnitarioAlMomentoDelCalculo  Float?

  projectId                       String
  project                         Project @relation(fields: [projectId], references: [id], onDelete: Cascade)

  accesorioId                     String
  accessory                       Accessory @relation(fields: [accesorioId], references: [id], onDelete: Cascade)

  @@unique([projectId, accesorioId])
}
