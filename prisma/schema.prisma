// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Material {
  id                            String   @id @default(cuid())
  nombreMaterial                String   @unique
  costoPorKg                    Float
  pesoSpoolCompradoGramos       Int      @default(1000)
  urlProducto                   String?
  selectorPrecioCSS             String?
  densidad                      Float?
  diametro                      Float?
  notasAdicionales              String?
  fechaUltimaActualizacionCosto DateTime @default(now()) @updatedAt
  projects                      Project[]
}

model Accessory {
  id                            String   @id @default(cuid())
  nombreAccesorio               String   @unique
  precioPaqueteObtenido         Float
  unidadesPorPaqueteEnLink      Int      @default(1)
  costoPorUnidad                Float
  urlProducto                   String?
  notasAdicionales              String?
  fechaUltimaActualizacionCosto DateTime @default(now()) @updatedAt
  projects                      AccessoryInProject[]
}

model ElectricityProfile {
  id                  String           @id @default(cuid())
  nombrePerfil        String           @unique
  consumoMensualKWh   Float
  costoTotalFactura   Float
  costoPorKWh         Float
  PrinterProfile      PrinterProfile[]
}

model PrinterProfile {
  id                                String    @id @default(cuid())
  nombrePerfilImpresora             String    @unique
  modeloImpresora                   String?
  consumoEnergeticoImpresoraWatts   Int?
  electricityProfileId              String
  electricityProfile                ElectricityProfile @relation(fields: [electricityProfileId], references: [id])
  costoAdquisicionImpresora         Float?
  vidaUtilEstimadaHorasImpresora    Int?
  porcentajeFallasEstimado          Float?
  costoHoraLaborOperativa           Float?
  costoHoraLaborPostProcesado       Float?
  fechaUltimaActualizacionConfig    DateTime  @default(now()) @updatedAt
  projects                          Project[]
}

model SalesProfile {
  id                      String    @id @default(cuid())
  nombrePerfil            String    @unique
  margenGananciaDirecta   Float     @default(30)
  comisionMercadoLibre    Float     @default(15)
  costoFijoMercadoLibre   Float     @default(800)
  projects                Project[]
}

model Tag {
  id       String    @id @default(cuid())
  name     String    @unique
  color    String
  projects Project[] @relation("ProjectTags")
}

model Project {
  id                              String               @id @default(cuid())
  nombreProyecto                  String
  descripcionProyecto             String?
  imageUrls                       Json[]
  materialUsadoId                 String
  material                        Material             @relation(fields: [materialUsadoId], references: [id])
  configuracionImpresoraIdUsada   String
  printerProfile                  PrinterProfile       @relation(fields: [configuracionImpresoraIdUsada], references: [id])
  perfilVentaIdUsado              String
  salesProfile                    SalesProfile         @relation(fields: [perfilVentaIdUsado], references: [id])
  
  inputsOriginales                Json // Store original inputs like weight, time, etc.
  resultadosCalculados            Json // Store all calculated costs and prices

  accesoriosUsadosEnProyecto      AccessoryInProject[]
  tags                            Tag[]                @relation("ProjectTags")

  fechaCreacion                   DateTime             @default(now())
  fechaUltimoCalculo              DateTime             @default(now()) @updatedAt
}

model AccessoryInProject {
  id                                String    @id @default(cuid())
  projectId                         String
  project                           Project   @relation(fields: [projectId], references: [id], onDelete: Cascade)
  accesorioId                       String
  accessory                         Accessory @relation(fields: [accesorioId], references: [id], onDelete: Cascade)
  cantidadUsadaPorPieza             Int
  costoUnitarioAlMomentoDelCalculo  Float?

  @@unique([projectId, accesorioId])
}
